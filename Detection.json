{
    "CollisionAvoidanceDetectionAPI": {
      "ScanForObstacles": {
        "endpoint": "/api/collision/scan",
        "method": "GET",
        "description": "Performs a scan for obstacles in the vicinity of the robot.",
        "response": {
          "obstacles": [
            {
              "id": "string",
              "distance": "double",
              "direction": "string"
            }
          ]
        }
      },
      "AvoidObstacle": {
        "endpoint": "/api/collision/avoid",
        "method": "POST",
        "description": "Initiates an avoidance maneuver based on detected obstacles.",
        "requestBody": {
          "obstacleId": "string"
        },
        "response": {
          "status": "success",
          "message": "Avoidance maneuver initiated."
        }
      },
      "SetCollisionAvoidanceStrategy": {
        "endpoint": "/api/collision/strategy",
        "method": "PATCH",
        "description": "Updates the strategy for collision avoidance (e.g., stop, detour, slow down).",
        "requestBody": {
          "strategy": "string"
        },
        "response": {
          "status": "success",
          "message": "Collision avoidance strategy updated."
        }
      }
    }
  }